<?php
/**
 * Test class for ZFHtml_WeekTable.
 * Generated by PHPUnit on 2010-04-18 at 16:09:13.
 */
class ZFHtml_WeekTableTest extends ControllerTestCase {
	/**
	 * @var DatasetGenerator
	 */
	protected $dSet;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp() {
        parent::setup();
		$this->dSet = new DatabaseFlatXmlSeed();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public function tearDown() {
        $this->db->query('DELETE FROM events');
        $this->db->query('CALL cleanTableForTesting()');
    }

    public function testYield() {
    	
    	$this->dSet->setSeed(APPLICATION_FAKESETS.'/users.xml');
        $this->dSet->getSetUpOperation();
        $lastDay = cal_days_in_month(CAL_GREGORIAN, date('m'), date('Y'));
        $start = date('Y-m-d',mktime(null, null, null, date('m'), 1,date('Y')));
        $end = date('Y-m-d',mktime(null, null, null, date('m'), $lastDay,date('Y')));
        $this->login('jvazquez', 'Test1234');
        $this->request->setMethod('POST')
                ->setPost(array(
                'title' => 'fooTitle',
                'data' => 'Data for a fake tests',
                'allDayEvent' => 0,
                'startDate' => $start,
                'endDate' => $end,
                'startTime' => '09:0:00',
                'endTime' => '10:30:00',
                'attendees'=>array(0=>2,1=>3)
                )
        );
        $this->dispatch('calendar/create');
        $this->resetRequest()
                ->resetResponse();

        $options = array('userid'=>1);
        $object = new ZFHtml_WeekTable($options);
        $result = $object->yield();
        $props = $object->getProperties();
        $this->assertType('string', $result);
    }

    public function testTimeDiffWithMinuteReturnsValue() {
    	
        $options = array('userid'=>1);
        $object = new ZFHtml_WeekTable($options);
        $timeFix = '9:13';
        $timeRange = array('9:00','9:15','9:30','9:45','10:00');
        $newId = $object->fixTime($timeFix, $timeRange);
        $this->assertTrue($newId==$timeRange[0],'I had this result instead '.$newId);
    }

    public function testTimeDiffWithMinuteDoesNotReturnsValue() {
    	
        $options = array('userid'=>1);
        $object = new ZFHtml_WeekTable($options);
        $timeFix = '14:35';
        $timeRange = array('8:00','8:30','9:00','9:30','10:00','10:30','11:00','11:30');
        $newId = $object->fixTime($timeFix, $timeRange);
        $this->assertFalse($newId,'I had this result instead '.$newId);
    }

    public function testTimeDiffWithHourReturnsValue() {
    	
        $options = array('userid'=>1);
        $object = new ZFHtml_WeekTable($options);
        $timeFix = '9:13';
        $timeRange = array('8:00','10:00','12:00','14:00');
        $newId = $object->fixTime($timeFix, $timeRange);
        $this->assertTrue($newId==$timeRange[0],'I had this result instead '.$newId);
    }
}
?>