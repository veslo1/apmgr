<?php

/**
 * Test class for Applicant_Library_Helper_Create.
 * Generated by PHPUnit on 2010-10-13 at 21:30:22.
 */
class Applicant_Library_Helper_CreateTest extends ControllerTestCase
{
	/**
	 * @var Applicant_Library_Helper_Create
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	public function setUp()
	{
		parent::setUp();
		$this->dataSetStackBuffer = array('users'=>1);
		$this->loadDataSets();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	public function tearDown()
	{
		$this->unLoadDataSets();
		parent::tearDown();
	}

	public function testsetApplicant()
	{
		
		$this->object = new Applicant_Library_Helper_Create(array('applicant'=>1));
		$this->assertEquals(1, $this->object->getApplicant(),'Getter method failed');
	}

	public function testgetApplicant()
	{
		
		$this->object = new Applicant_Library_Helper_Create(array('applicant'=>1));
		$this->assertEquals(1, $this->object->getApplicant(),'Getter method failed');
	}

	public function testApplicantExistsPasses()
	{
		
		$this->object = new Applicant_Library_Helper_Create(array('applicant'=>1));
		$this->assertTrue($this->object->applicantExists(),'The validation method failed in Applicant_Library_Helper_Create');
	}

	public function testApplicantExistsFailsApplicant()
	{
		
		$this->object = new Applicant_Library_Helper_Create(array('applicant'=>88));
		$this->assertFalse($this->object->applicantExists(),'The validation method failed in Applicant_Library_Helper_Create');
	}

	public function testInitApplicantForm()
	{
		
		$this->object = new Applicant_Library_Helper_Create(array('applicant'=>1));
		$form = $this->object->initFormApplicant();
		$this->assertType('Applicant_Form_Email', $form);
		$this->assertEquals('japplicant test<applicant@debserverp4.com.ar>',$form->getElement('to')->getValue(),'The to address should be populated');
	}

	public function testDispatchEmailApplicant()
	{
		
		$this->object = new Applicant_Library_Helper_Create(array('applicant'=>1));
		$args = array();
		$pushed = $this->object->dispatchEmailApplicant($args);
		//TODO This needs to be configured properly, can't test than email is delivered, we need sendmail or postfix
//		$this->assertTrue($pushed,'The email could not be delievered');
	}

}
?>