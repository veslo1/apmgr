<?php
/**
 * Test class for Applicant_Library_DashboardHelper.
 * Generated by PHPUnit on 2010-08-27 at 21:39:00.
 */
class Applicant_Library_DashboardHelperTest extends ControllerTestCase
{
	/**
	 * @var Applicant_Library_DashboardHelper
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	public function setUp()
	{
		parent::setUp();
		$this->dataSetStackBuffer = array('users'=>1,'applicantApply'=>0,'accountsAndLinks'=>1,'depositsAndFees'=>1,'bills'=>1);
		$this->loadDataSets();
		$this->object = new Applicant_Library_DashboardHelper;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	public function tearDown()
	{
		$this->unLoadDataSets();
		parent::tearDown();
	}

	/**
	 * Retrieve completed applications for the current user
	 */
	public function testRetrieveApplicationsReturnsArray()
	{
		
		$this->login('applicant','Test1234');
		$auth = Zend_Auth::getInstance();
		$applications = $this->object->retrieveCompletedApplications($auth);
		$this->assertType('array', $applications);
	}

	public function testRetrieveApplicationsReturnsArrayFull()
	{
		
		$this->login('applicant','Test1234');
		$auth = Zend_Auth::getInstance();
		$applications = $this->object->retrieveCompletedApplications($auth);
		$this->assertTrue(count($applications)>0,'The array returned was not greater than 0');
	}

	public function testRetrieveCompletedWaitLists()
	{
		
		$this->login('jconnor','Test1234');
		$auth = Zend_Auth::getInstance();
		$waitList = $this->object->retrieveWaitListData($auth);
		$this->assertType('array', $waitList,'We Expected an array result');
		$this->assertTrue(count($waitList)>0,'We expected at least a bigger sized array');
	}

	public function testRetrieveWaitListReturnsEmptyArray()
	{
		
		$this->login('applicant','Test1234');
		$auth = Zend_Auth::getInstance();
		$waitList = $this->object->retrieveWaitListData($auth);
		$this->assertType('array', $waitList,'We Expected an array result');
		$this->assertTrue(count($waitList)==0,'We expected at least a bigger sized array');
	}
}
?>
