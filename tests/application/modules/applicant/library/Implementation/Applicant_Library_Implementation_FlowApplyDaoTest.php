<?php
/**
 * Test class for Applicant_Library_Implementation_FlowApplyDao.
 * Generated by PHPUnit on 2010-12-23 at 17:57:40.
 * @author Jorge Omar Vazquez <jvazquez@debserverp4.com.ar>
 * @package tests.application.modules.applicant.library.implementation
 */
class Applicant_Library_Implementation_FlowApplyDaoTest extends ControllerTestCase
{
	/* (non-PHPdoc)
	 * @see Framework/PHPUnit_Framework_TestCase::setUp()
	 */
	public function setUp()
	{
		parent::setUp();
	}

	/* (non-PHPdoc)
	 * @see Framework/PHPUnit_Framework_TestCase::tearDown()
	 */
	public function tearDown()
	{
		parent::tearDown();
	}

	public function testInitPeristanceTemplate()
	{
		$flowDao = new Applicant_Library_Implementation_FlowApplyDao();
		$args = array('sessionNamespace'=>'applicantApply');
		$flowDao->initPeristanceTemplate($args);
		$this->assertTrue(Zend_Session::namespaceIsset('applicantApply'),'Namespace not set');
		$flowDao->endSession();
	}

	public function testFindByStepName()
	{
		$flowDao = new Applicant_Library_Implementation_FlowApplyDao();
		$args = array('sessionNamespace'=>'applicantApply');
		$flowDao->initPeristanceTemplate($args);
		$stepone = $flowDao->findByStepName('steps');
		$expected = array('page'=>'apply','url'=>'applicant/apply/index','complete'=>null,'payload'=>null,'current'=> null,'action'=> null,'next'=> 'applicant/apply/aboutyou');
		$this->assertEquals($stepone[0],$expected,'Failed to fetch a result');
		$flowDao->endSession();
	}

	public function testSave()
	{
		$flowDao = new Applicant_Library_Implementation_FlowApplyDao();
		$args = array('sessionNamespace'=>'applicantApply');
		$flowDao->initPeristanceTemplate($args);
		$args = array('identifier'=>'unit','data'=>1);
		$result = $flowDao->save($args);
		$this->assertTrue($result!=null,'Failed to save');
		$this->assertEquals($flowDao->findByStepName('unit'),$args['data'] );
		$flowDao->endSession();
	}

	public function testSaveSteps()
	{
		$flowDao = new Applicant_Library_Implementation_FlowApplyDao();
		$args = array('sessionNamespace'=>'applicantApply');
		$flowDao->initPeristanceTemplate($args);
		$args = array('identifier'=>'steps','data'=>array(0=>array('page' => 'apply','url' => 'applicant/apply/index',
									'complete' => true,
									'payload'  => array('unit'=>1,'apartment'=>1,'model'=>1),
									'current'  => true,
									'action'   => 'moveNext',
									'next'     => 'applicant/apply/aboutyou')));
		$result = $flowDao->save($args);
		$this->assertTrue($result,'Result should be true');
		$buffer = $flowDao->findByStepName('steps');
		$this->assertEquals($buffer[0],$args['data'][0],'The expected update is not equal');
		$this->assertEquals(14,count($buffer),'We should have the same amount of elements');
	}

	public function testEndSession()
	{
		$flowDao = new Applicant_Library_Implementation_FlowApplyDao();
		$args = array('sessionNamespace'=>'applicantApply');
		$flowDao->initPeristanceTemplate($args);
		$this->assertTrue(Zend_Session::namespaceIsset('applicantApply'),'Namespace not set');
		$result = $flowDao->endSession();
		$this->assertFalse(Zend_Session::namespaceIsset('applicantApply'),'Namespace is set');
	}

	public function testGetPersistanceTemplate()
	{
		$flowDao = new Applicant_Library_Implementation_FlowApplyDao();
		$args = array('sessionNamespace'=>'applicantApply');
		$flowDao->initPeristanceTemplate($args);
		$this->assertTrue(Zend_Session::namespaceIsset('applicantApply'),'Namespace not set');
		$expected = array(
						0=>array(
									'page' => 'apply',
									'url' => 'applicant/apply/index',
									'complete' => null,
									'payload'  => null,
									'current'  => null,
									'action'   => null,
									'next'     => 'applicant/apply/aboutyou'
									),
							1=>array(
									'page'=>'aboutYou',
									'url' => 'applicant/apply/aboutyou',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/currentaddress',
									'prev' => 'applicant/apply/index'
									),
							2=>array(
									'page'=>'address',
									'url'=>'applicant/apply/currentaddress',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/previousaddress',
									'prev' => 'applicant/apply/aboutyou'
									),
							3=>array(
									'page'=>'previousApplicantAddress',
									'url'=>'applicant/apply/previousaddress',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/currentworkhistory',
									'prev' => 'applicant/apply/currentaddress'
									),
							4=>array(
									'page'=>'currentWorkHistory',
									'url'=>'applicant/apply/currentworkhistory',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/previousworkhistory',
									'prev' => 'applicant/apply/previousaddress'
									),
							5=>array(
									'page'=>'previousWorkHistory',
									'url'=>'applicant/apply/previousworkhistory',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/credithistory',
									'prev' => 'applicant/apply/currentworkhistory'
									),
							6=>array(
									'page'=>'applicantCreditHistory',
									'url'=>'applicant/apply/credithistory',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/rentalcriminalhistory',
									'prev' => 'applicant/apply/previousworkhistory'
									),
							7=>array(
									'page'=>'rentalCriminalHistory',
									'url'=>'applicant/apply/rentalcriminalhistory',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/spouse',
									'prev' => 'applicant/apply/credithistory'
									),
							8=>array(
									'page'=>'spouse',
									'url'=>'applicant/apply/spouse',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/occupants',
									'prev' => 'applicant/apply/rentalcriminalhistory'
									),
					   		9=>array(
									'page'=>'otherOccupantsForm',
									'url'=>'applicant/apply/occupants',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/vehicles',
									'prev' => 'applicant/apply/spouse'
									),
					   		10=>array(
									'page'=>'vehicles',
									'url'=>'applicant/apply/vehicles',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/whyyourented',
									'prev' => 'applicant/apply/occupants'
									),
							11=>array(
									'page'=>'whyYouRentedHere',
									'url'=>'applicant/apply/whyyourented',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/emergencycontact',
									'prev' => 'applicant/apply/vehicles'
									),
							12=>array(
									'page'=>'applicantEmergencyContact',
									'url'=>'applicant/apply/emergencycontact',
									'complete'=>null,
									'payload'=>null,
									'current'=>null,
									'action'=>null,
									'next'=>'applicant/apply/authorization',
									'prev' => 'applicant/apply/whyyourented'
									),
							13=>array(
									'page'=>'authorizationLabel',
									'url'=>'applicant/apply/authorization',
									'complete'=> null,
									'payload'=>  null,
									'current'=>  null,
									'action' =>  'applicant/apply/removeinfo',
									'next'	 => 'applicant/apply/end',
									'prev'   => 'applicant/apply/applicantemergencycontact'
									)
									);
									$steps = $flowDao->getPersistanceTemplate();
									$this->assertEquals($expected,$steps,'The steps do not match');
									$flowDao->endSession();
	}
}
?>
