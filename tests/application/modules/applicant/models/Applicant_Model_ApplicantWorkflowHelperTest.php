<?php
/**
 * Test class for Applicant_Model_ApplicantWorkflowHelperTest.
 * Generated by Jorge
 */
class Applicant_Model_ApplicantWorkflowHelperTest extends ControllerTestCase {
	
	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::setUp()
	 */
	public function setUp()
	{
		parent::setUp();
		$this->dataSetStackBuffer = array('users'=>1);
		$this->loadDataSets();
	}

	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::tearDown()
	 */
	public function tearDown()
	{
		$this->unLoadDataSets();
		parent::tearDown();
	}

	public function testGetCredentialsWillReturnEmptyResultWhenNotAuthenticated() {
		
		$awh = new Applicant_Library_WorkflowHelper();
		$this->assertFalse($awh->getCredentials()->hasIdentity(),'Credentials should be empty');
	}

	public function testGetCredentialsWillReturnCredentialsWhenAuthenticated() {
		
		$this->login('pmanager','Test1234');
		$awh = new Applicant_Library_WorkflowHelper();
		$this->assertTrue($awh->getCredentials()->hasIdentity(),'Credentials should not be empty');
	}

	public function testAnswerFormWillPopulateSession() {
		
		$awh = new Applicant_Library_WorkflowHelper();
		$awh->initSession();
		$awh->routeAuthenticateUser(array('haveaccount'=>1));
		$this->assertArrayHasKey('one',$awh->getSessionSteps()->steps);
		$this->assertEquals('applicant/apply/aboutyou',$awh->getSessionSteps()->steps['one']['next'],'The next step should be two');
		$this->assertEquals(join("/",array('module'=>'applicant','controller'=>'apply','action'=>'applyuser')),$awh->getSessionSteps()->steps['one']['action'],'The action should be an array');
		$this->assertEquals(1,$awh->getSessionSteps()->steps['one']['current'],'Current shuold be true');
		$this->assertEquals(array('haveaccount'=>1),$awh->getSessionSteps()->steps['one']['payload'],'The next step should be two');
		$this->assertEquals(0,$awh->getSessionSteps()->steps['one']['complete'],'Complete should be false');
	}
}