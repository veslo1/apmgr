<?php

/**
 * Test class for Applicant_Model_Applicant.
 * Generated by PHPUnit on 2010-07-11 at 22:59:07.
 */
class Applicant_Model_ApplicantTest extends ControllerTestCase {
    /**
     * @var Applicant_Model_Applicant
     */
    protected $object;


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp() {
        parent::setUp();
        $this->dataSetStackBuffer = array('users'=>1);
		$this->loadDataSets();
        $this->object = new Applicant_Model_Applicant(array('userId'=>7));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public function tearDown()
    {
    	$this->unLoadDataSets();
        parent::tearDown();
    }

    public function testGetUserId() {
    	
    	
        $this->assertEquals($this->object->getUserId(),7);
    }


    public function testSetUserId() {
    	
        $this->object->setUserId(10);
        $this->assertEquals($this->object->getUserId(),10);
    }

    public function testDelete() {
    	
        $this->object->setUserId(7);
        $saved = $this->object->save();
        $this->assertTrue($saved!=false);
        $deleted = $this->object->delete(1);
        $this->assertTrue($deleted!=false);
    }

    public function testFetchAllApplicants() {
    	
        $this->object->setUserId(7);
        $saved = $this->object->save();
        $this->assertTrue($saved!=false);
        $result = $this->object->fetchAllApplicants();
        $this->assertTrue(count($result)>0);
    }

    public function testFindByIdSpawnsResult() {
    	
    	$applicant = $this->object->exists(array('table'=>'applicant','column'=>'userId'), 7);
    	$this->assertTrue($applicant,'Failed matching that the applicant exists');
    }

    public function testFetchApplicantUser() {
    	
        $this->object->setId(1);
        $result = $this->object->fetchApplicantUser();  // should return user object id = 7
        $this->assertEquals( 7,$result['id'] );
    }

}
?>
