<?php
/**
 * Test class for Applicant_Model_ApplicantSpouse.
 * Generated by PHPUnit on 2010-06-19 at 20:00:40.
 */
class Applicant_Model_ApplicantSpouseTest extends ControllerTestCase {
	
	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::setUp()
	 */
	public function setUp()
	{
		parent::setUp();
		$this->dataSetStackBuffer = array('users'=>1);
		$this->loadDataSets();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	public function tearDown()
	{
		$this->unLoadDataSets();
		parent::tearDown();
	}

	public function testSave() {
		
		$args = array(
                'applicantId'=>1,
                'fullName'=>'Dingo',
                'ssn'=>123456789,
                'dob'=>'1985-04-22',
                'cityStateZip'=>'Banfield, Buenos Aires 1828',
                'height'=>128,
                'weight'=>128,
                'sex'=>'m',
                'eyeColor'=>'red',
                'hairColor'=>'brunette',
                'usCitizen'=>1,
                'workPhone'=>'2800000-222',
                'cellPhone'=>'123131231312444',
                'position'=>'chief',
                'emailAddress'=>'test@email.com',
                'dateBeganJob'=>'2004-06-01',
                'income'=>200,
                'superVisorName'=>'nux',
                'superVisorPhone'=>'22222222'
                );

                $apSpouse = new Applicant_Model_Spouse($args);
                $this->assertEquals(1,$apSpouse->getApplicantId(),'We expected the same userId');
                $this->assertEquals(123456789,$apSpouse->getSsn(),'Ssn Failed');
                $this->assertEquals($args['dob'],$apSpouse->getDob(),'Dob Failed');
                $this->assertEquals($args['cityStateZip'],$apSpouse->getCitystateZip(),'City State Zip');
                $this->assertEquals($args['height'],$apSpouse->getHeight(),'Height Color');
                $this->assertEquals($args['weight'],$apSpouse->getWeight(),'Weight failed');
                $this->assertEquals($args['sex'],$apSpouse->getSex(),'Sex Color');
                $this->assertEquals($args['eyeColor'],$apSpouse->getEyeColor(),'Eye Color');
                $this->assertEquals($args['hairColor'],$apSpouse->getHairColor(),'Hair Color');
                $this->assertEquals($args['usCitizen'],$apSpouse->getUsCitizen(),'Us Citizen');
                $this->assertEquals($args['workPhone'],$apSpouse->getWorkPhone(),'Work Phone Failed');
                $this->assertEquals($args['cellPhone'],$apSpouse->getCellPhone(),'CellPhone failed');
                $this->assertEquals($args['position'],$apSpouse->getPosition(),'Position failed');
                $this->assertEquals($args['emailAddress'],$apSpouse->getEmailAddress(),'Email Address Failed');
                $this->assertEquals($args['dateBeganJob'],$apSpouse->getDateBeganJob(),'Date began job failed');
                $this->assertEquals($args['income'],$apSpouse->getIncome(),'Income failed');
                $this->assertEquals($args['superVisorName'],$apSpouse->getSuperVisorName(),'Super Visor name failed');
                $this->assertEquals($args['superVisorPhone'],$apSpouse->getSuperVisorPhone(),'Super Visor Phone');
                $saved=$apSpouse->save();
                $this->assertTrue($saved!=false,'Save failed');
	}

	public function testSaveWithouManyArgsWillPas() {
		
		$args = array(
                'applicantId'=>1,
                'fullName'=>'Dingo',
                'cityStateZip'=>'Banfield, Buenos Aires 1828',
                'height'=>128,
                'weight'=>128,
                'sex'=>'m',
                'eyeColor'=>'red',
                'hairColor'=>'brunette',
                'usCitizen'=>1,
                'workPhone'=>'2800000-222',
		);

		$apSpouse = new Applicant_Model_Spouse($args);
		$result=$apSpouse->save();
		$this->assertTrue($result!=false,'Fail saved');
	}
}
?>
