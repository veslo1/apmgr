<?php
/**
 * Test class for Applicant_Form_LeaseAgentFilter.
 * Generated by PHPUnit on 2010-09-12 at 15:30:02.
 */
class Applicant_Form_LeaseAgentFilterTest extends ControllerTestCase
{
    /**
     * @var Applicant_Form_LeaseAgentFilter
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
    	parent::setUp();
        $this->object = new Applicant_Form_LeaseAgentFilter;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public function tearDown()
    {
    	parent::tearDown();
    }

    /**
     * @test
     */
    public function formContainsFilterByStatusCheckbox()
    {
    	$this->object->setStatuses(array(1=>'foo',2=>'bar'));
    	$this->object->setForm();
    	$filterByStatus = $this->object->getElement('filterByStatus');
    	$this->assertNotNull($filterByStatus,'We expected to have the filterByStatus checkbox');
    }

    /**
     * @test
     */
    public function formContainsSelect()
    {
    	$this->object->setStatuses(array(1=>'foo',2=>'bar'));
    	$this->object->setForm();
    	$name = 'filterValue';
    	$statusApplicant = $this->object->getElement($name);
    	$this->assertNotNull($statusApplicant,'The select element is null');
    }

    public function testPopulateSelect() {
    	$status = $this->object->setStatuses(array(1=>'pending',2=>'accepted',3=>'rejected'));
    	$this->object->setForm();
    	$this->assertTrue($status,'Push operation failed');
    }

    /**
     * @test
     */
    public function formContainsInputForUnitNumberSearch()
    {
    	$this->object->setForm();
    	$name = 'unitNumber';
    	$unitNumber = $this->object->getElement($name);
    	$this->assertNotNull($unitNumber,'The unitNumber element is null');
    }

    /**
     * @test
     */
    public function formContainsInputForFilterByDatesCheckbox()
    {
    	$this->object->setForm();
    	$name = 'filterByDates';
    	$unitNumber = $this->object->getElement($name);
    	$this->assertNotNull($unitNumber,'The filterByDates checkbox element is null');
    }

    /**
     * @test
     */
    public function formContainsDateFrom()
    {
    	$this->object->setForm();
    	$name = 'dateFrom';
    	$unitNumber = $this->object->getElement($name);
    	$this->assertNotNull($unitNumber,'The dateFrom input element is null');
    }

    /**
     * @test
     */
    public function formWillNotShowStatusesIfStatusesIsEmpty()
    {
    	$void = array();
    	$this->object->setStatuses($void);
    	$this->object->setForm();
    	$this->assertNull( $this->object->getElement('filterByStatus'),"We shouldn't be displaying the form");
    }
}
?>
