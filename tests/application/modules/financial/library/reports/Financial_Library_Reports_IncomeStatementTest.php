<?php
/**
 * Test class for Financial_Library_Reports_IncomeStatement.
 * Generated by PHPUnit on 2010-12-13 at 22:51:32.
 * @author Jorge Omar Vazquez
 * @package tests.application.financial.library.reports
 */
class Financial_Library_Reports_IncomeStatementTest extends ControllerTestCase
{
    /* (non-PHPdoc)
     * @see Framework/PHPUnit_Framework_TestCase::setUp()
     */
    public function setUp()
    {
    	parent::setUp();
        $this->dataSetStackBuffer = array('users'=>1);
        $this->login('jvazquez','Test1234');
        $this->loadDataSets();
    }

    /* (non-PHPdoc)
     * @see Framework/PHPUnit_Framework_TestCase::tearDown()
     */
    public function tearDown()
    {
        $this->unLoadDataSets();
    	parent::tearDown();
    }

    public function testRunReport()
    {
    }

    /**
     * 
     * Perform an operation that sums only revenue elements
     * The test will return a signed double value
     * @return signed double
     */
    public function testSumAccountBalancePerformsOperation()
    {
//   Thank you phpunit , *thank you* , now I don't have mocks or stubs. POS 	
//    	$mock = $this->getMock('Financial_Library_Reports_IncomeStatement');
//    	$mock->expects($this->once())
//    		->method('getSection');
//    		->with($this->equalTo('revenue'));
		
		$stubResult = array('fooAccount'=>10.54,'barAccount'=>10,'foobaraccount'=>80);
		$report = new Financial_Library_Reports_IncomeStatement();
		$result = $report->sumAccountBalance($stubResult);
		$this->assertEquals(100.54, $result,'The obtained sum should be the same',0.001);
    }
    
    public function testSumRevenueReturnsZeroWithEmptyArg()
    {
    	
    	$stubResult = array();
		$report = new Financial_Library_Reports_IncomeStatement();
		$result = $report->sumAccountBalance($stubResult);
		$this->assertEquals(0, $result,'The obtained sum should be the same',0.001);
    }

    public function testRunReportNoCache()
    {
        
        $this->login('jvazquez','Test1234');
        $report = new Financial_Library_Reports_IncomeStatement();
        $result = $report->runReport(false);
        $stubResult = array('revenue'=>array(),'expense'=>array(),'sumRevenue'=>0,'sumExpense'=>0,'balance'=>0);
        $this->assertEquals($result,$stubResult);
    }
}
?>
