<?php
/**
 * Test class for Financial_Library_Rerports_RentRoll.
 * Generated by PHPUnit on 2010-10-29 at 23:31:16.
 */
class Financial_Library_Reports_RentRollTest extends ControllerTestCase {

	/* (non-PHPdoc)
	 * @see Framework/PHPUnit_Framework_TestCase::setUp()
	 */
	public function setUp()
	{
		parent::setUp();
		$this->dataSetStackBuffer = array('rentRoll'=>1);
		$this->login('jvazquez','Test1234');
		$this->loadDataSets();
	}

	/* (non-PHPdoc)
	 * @see Framework/PHPUnit_Framework_TestCase::tearDown()
	 */
	public function tearDown()
	{
		$this->unLoadDataSets();
		parent::tearDown();
	}

	public function testInitDb()
	{
		$object = new Financial_Library_Reports_RentRoll;
		$object->setGatewayLink(Financial_Library_Reports_RentRoll::DB);
		$db = $object->getGatewayLink();
		$this->assertType('Zend_Db_Adapter_Pdo_Mysql', $db);
	}

	public function testConfigureCache()
	{
		$object = new Financial_Library_Reports_RentRoll();
		$object->init();
		$this->assertType('Zend_Cache_Manager',$object->getCacheManager());
	}

	public function testRunReportNoCache()
	{
		$object = new Financial_Library_Reports_RentRoll;
		$result = $object->runReport(false);
		//		print $object->getQuery()->__toString();
		$this->assertTrue(count($result)>0,'The query failed to obtain results');
		$this->assertEquals("SELECT DATE_FORMAT(L.leaseStartDate,'%m/%d/%Y') AS `leaseStartDate`, DATE_FORMAT(L.leaseEndDate,'%m/%d/%Y') AS `leaseEndDate`, DATE_FORMAT(L.lastDay,'%m/%d/%Y') AS `lastDay`, `MRS`.`rentAmount`, `U`.`number` AS `unitNumber`, `T`.`userId`, CONCAT_WS(' ',US.firstName, US.lastName) AS `tenantName` FROM `lease` AS `L`
 INNER JOIN `modelRentScheduleItem` AS `MRS` ON MRS.id=L.modelRentScheduleItemId
 INNER JOIN `unit` AS `U` ON L.unitId = U.id
 INNER JOIN `tenant` AS `T` ON L.id=T.leaseId
 INNER JOIN `user` AS `US` ON T.userId=US.id WHERE (DATE(NOW()) BETWEEN DATE(L.leaseStartDate) and (L.lastDay))",$object->getQuery()->__toString());
		
	}

	public function testRunReportWithCache()
	{
		$object = new Financial_Library_Reports_RentRoll();
		$object->init();
		$result = $object->runReport(true);
		$this->assertTrue(count($result)>0,'The query failed to obtain results');
		//	Since we did not seed the object, the tags will match
		$this->assertEquals(Financial_Library_Reports_RentRoll::DEFAULTSEED,$object->getSeed());
	}

	public function testQueryWithSort()
	{
		$args = array(ZFInterfaces_Sortable::MODE=>ZFInterfaces_Sortable::ASCVIEW,
		ZFInterfaces_Sortable::COLUMN=>'tenantName');
		$object = new Financial_Library_Reports_RentRoll($args);
		$result = $object->runReport(false);
		$this->assertTrue(preg_match('/ORDER BY `tenantName` ASC/',$object->getQuery()->__toString())==1,$object->getQuery()->__toString());
	}

	public function testHandleQueryParamsMultiple()
	{
		$args = array(ZFInterfaces_Sortable::MODE=>ZFInterfaces_Sortable::ASCVIEW,
		ZFInterfaces_Sortable::COLUMN=>'tenantName','page'=>2,
        			'cacheIdentifier'=>Financial_Library_Reports_RentRoll::CACHEIDENTIFIER);
		$object = new Financial_Library_Reports_RentRoll($args);
		$object->init();
		$this->assertEquals('rentRollReportpage2tenantNameASC',$object->getSeed());
	}

	public function testHandleQueryParamsPagination()
	{
		$args = array('page'=>2);
		$object = new Financial_Library_Reports_RentRoll($args);
		$object->init();
		$this->assertEquals('rentRollReportpage2',$object->getSeed());
	}

	public function testHandleQueryParamsBadPagination()
	{
		$args = array('fakee'=>2);
		$object = new Financial_Library_Reports_RentRoll($args);
		$object->init();
		$this->assertEquals('rentRollReport',$object->getSeed());
		unset($object);
		$args = array('page'=>"x3");
		$object = new Financial_Library_Reports_RentRoll($args);
		$object->init();
		$this->assertEquals('rentRollReport',$object->getSeed());
	}

}
?>
