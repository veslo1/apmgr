<?php
/**
 * Test class for User_Library_Implementation_RetrieveDao.
 * Generated by PHPUnit on 2011-01-16 at 16:43:29.
 * @author Jorge Omar Vazquez <jvazquez@debserverp4.com.ar>
 */
class User_Library_Implementation_RetrieveDaoTest extends ControllerTestCase
{
	/**
	 * (non-PHPdoc)
	 * @see Framework/PHPUnit_Framework_TestCase::setUp()
	 */
    public function setUp()
    {
    	parent::setUp();
    }

    /**
     * (non-PHPdoc)
     * @see Framework/PHPUnit_Framework_TestCase::tearDown()
     */
    public function tearDown()
    {
    }

    public function testSetMessageState()
    {
        $rdao = new User_Library_Implementation_RetrieveDao();
        $stub = array('msg'=>'foo','type'=>'error');
        $rdao->setMessageState($stub);
        $this->assertEquals($stub,$rdao->getMessageState());
    }
    
    public function testGetMessageState()
    {
        $rdao = new User_Library_Implementation_RetrieveDao();
        $stub = array('msg'=>'foo','type'=>'error');
        $rdao->setMessageState($stub);
        $this->assertEquals($stub,$rdao->getMessageState());
    }

    public function testSave()
    {
    	Zend_Date::setOptions(array('format_type' => 'php'));
    	$date = new Zend_Date();
    	$date->add(3,Zend_Date::DAY);
		$args = array('hashToken'=>sha1('dog'),'receiver'=>'jvazquez@gmail.com','expiricyDate'=>$date->toString('Y-m-d'));
		$recover = new User_Model_Recover($args);
		$rdao = new User_Library_Implementation_RetrieveDao();
		$result = $rdao->save($recover);
		$this->assertTrue($result!=false,'We are not expecting a false result');
    }

    /**
     * @todo Implement testSaveCollection().
     */
    public function testSaveCollection()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetPersistanceEngine().
     */
    public function testGetPersistanceEngine()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testFindById().
     */
    public function testFindById()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testFindByKey().
     */
    public function testFindByKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testUpdate().
     */
    public function testUpdate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testFetchAll().
     */
    public function testFetchAll()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetDefinition().
     */
    public function testGetDefinition()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetTemplate().
     */
    public function testGetTemplate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
