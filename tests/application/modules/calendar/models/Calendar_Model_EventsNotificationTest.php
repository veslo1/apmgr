<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for Calendar_Model_EventsNotification.
 * Generated by PHPUnit on 2010-04-02 at 19:31:05.
 */
class Calendar_Model_EventsNotificationTest  extends ControllerTestCase {
    /**
     * @var Calendar_Model_EventsNotification
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp() {
        parent::setUp();
        $this->dataSetStackBuffer = array('users'=>1);
		$this->loadDataSets();
        $this->object = new Calendar_Model_EventsNotification;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public function tearDown()
    {
    	parent::tearDown();
    	$this->unLoadDataSets();
        $this->db->query('DELETE FROM eventsNotification');
        unset($this->object);
    }

    public function testGetEventId()
    {
    	
        $this->object->setEventId(1);
        $this->assertEquals(1, $this->object->getEventId(), 'Failed setting the id');
    }

    public function testSetEventId()
    {
    	
        $this->object->setEventId(1);
        $this->assertEquals(1, $this->object->getEventId(), 'Failed setting the id');
    }

    public function testSetConfirmed()
    {
    	
        $this->object->setConfirmed(true);
        $this->assertTrue($this->object->getConfirmed(),'Failed confirming');
    }

    public function testGetConfirmed()
    {
    	
        $this->object->setConfirmed(true);
        $this->assertTrue($this->object->getConfirmed(),'Failed confirming');
    }

    public function testSetGuestId()
    {
    	
        $this->object->setGuestId(1);
        $this->assertTrue($this->object->getGuestId(1)==1,'Failed confirming the guest id');
    }

    public function testGetGuestId()
    {
    	
        $this->object->setGuestId(1);
        $this->assertTrue($this->object->getGuestId(1)==1,'Failed confirming the guest id');
    }

    public function testPrepareSave()
    {
    	
        $cal = new Calendar_Model_Events(array('title'=>'truff','data'=>'crap','allDayEvent'=>1,'owner'=>1));
        $eventId = $cal->save();
        $this->assertTrue($eventId!=false,'We did not save the event');
        $options = array('attendees'=>array(0=>1,1=>2),'eventId'=>$eventId);
        $result = $this->object->prepareSave($options);
        $this->assertTrue($result!=false,'Saving notifications failed');
    }

    public function testPrepareSaveNoGuests()
    {
    	
        $cal = new Calendar_Model_Events(array('title'=>'truff','data'=>'crap','allDayEvent'=>1,'owner'=>1));
        $eventId = $cal->save();
        $this->assertTrue($eventId!=false,'We did not save the event');
        $result = $this->object->prepareSave();
        $this->assertTrue($result!=false,'Saving notifications failed');
    }
}
?>