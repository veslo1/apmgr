<?php
/**
 * Test class for Calendar_ViewController.
 * Generated by PHPUnit on 2010-04-17 at 15:30:02.
 */
class Calendar_ViewControllerTest  extends ControllerTestCase {

	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::setUp()
	 */
	public function setUp() {
		parent::setup();
		$this->dataSetStackBuffer = array('users'=>1);
		$this->loadDataSets();
	}

	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::tearDown()
	 */
	public function tearDown() {
		$this->unLoadDataSets();
		parent::tearDown();
		$this->db->query('DELETE FROM events');
	}

	public function testIndexAction()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$mname = date('F');
		$this->login('jvazquez', 'Test1234');
		$this->dispatch('calendar/view');
		$this->assertQueryContentContains('p',$mname,$this->getResponse()->getBody());
	}

	public function testDailyviewAction()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jvazquez', 'Test1234');
		$args =	array( 'title' => 'fooTitle', 'data' => 'Data for a fake tests', 'allDayEvent' => 0, 'owner' => 1, 'startDate' => date('Y-m-d'), 'endDate' => date('Y-m-d'), 'startTime' => '16:00:00', 'endTime' => '17:00:00');
		$this->request->setMethod('POST')->setPost($args);
		$this->dispatch('calendar/create');
		print $this->getResponse()->getBody();
		$this->resetRequest()->resetResponse();
		$event = new Calendar_Model_Events();
		$result = $event->findByKey(array( 'returnClassObject'=>true, 'search'=> array( "title"=>"fooTitle") ) );
		$this->assertType('array', $result,'Should have retrieved an array response');
		$this->assertGreaterThanOrEqual(1, count($result));
		$event = array_shift($result);
		$this->assertEquals('fooTitle', $event->getTitle());
		$this->dispatch('calendar/view/dailyview');
		$this->assertQueryContentContains('a','fooTitle',$this->getResponse()->getBody());
	}

	public function testVieweventAction()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jvazquez', 'Test1234');
		$args = array('title' => 'fooTitle','data' => 'Data for a fake tests','allDayEvent' => 0,'startDate' => date('Y-m-d'),'endDate' => date('Y-m-d'),'startTime' => '16:10:00','endTime' => '17:00:00');
		$this->request->setMethod('POST')->setPost($args);
		$this->dispatch('calendar/create');
        $this->resetRequest()
        	 ->resetResponse();
		$event = new Calendar_Model_Events();
        $result = $event->findByKey(array( 'returnClassObject'=>true, 'search'=> array( "title"=>"fooTitle") ) );
        $id = array_shift($result)->getId();
        $this->dispatch("calendar/view/viewevent/id/$id");
        $this->assertQueryContentContains('td','fooTitle',"Foo title not found");
        $this->assertQueryContentContains('p',date('m/d/Y'),"The current date should be visible");
	}

	public function testWeekviewAction()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$lastDay = cal_days_in_month(CAL_GREGORIAN, date('m'), date('Y'));
		$start = date('Y-m-d',mktime(null, null, null, date('m'), 1,date('Y')));
		$end = date('Y-m-d',mktime(null, null, null, date('m'), $lastDay,date('Y')));
		$this->login('jvazquez', 'Test1234');
		$args =	array( 'title' => 'fooTitle', 'data' => 'Data for a fake tests', 'allDayEvent' => 0, 'startDate' => $start, 'endDate' => $end, 'startTime' => '09:0:00', 'endTime' => '10:30:00');
		$this->request->setMethod('POST')->setPost($args);
		$this->dispatch('calendar/create');
       	$this->resetRequest()->resetResponse();
		$this->dispatch('calendar/view/weekview');
       	$this->assertQueryContentContains('a','fooTitle',$this->getResponse()->getBody());
	}
}
?>
