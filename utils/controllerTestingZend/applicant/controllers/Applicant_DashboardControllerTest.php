<?php
/**
 * Test class for Applicant_DashboardController.
 * Generated by PHPUnit on 2010-08-20 at 17:21:35.
 */
class Applicant_DashboardControllerTest extends ControllerTestCase implements ZFObserver_ILogeable
{
	/**
	 * @var Applicant_DashboardController
	 */
	protected $object;

	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::setUp()
	 */
	public function setUp()
	{
		parent::setUp();
		$this->dataSetStackBuffer = array('users'=>1,'accountsAndLinks'=>1,'depositsAndFees'=>1,'bills'=>1,'applicantApply'=>0,'ApplicantPayment'=>0,'setting'=>1);
		$this->loadDataSets();
	}

	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::tearDown()
	 */
	public function tearDown()
	{
		parent::tearDown();
		$this->unLoadDataSets();
	}

	public function testIndexActionDisplaysLinksForEachApplication()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/application');
		$this->assertQueryContentContains('a',"View Fee's Due",$this->getResponse()->getBody());
		$this->assertXpath("//a[@href='apmgr.com/applicant/dashboard/viewfeesdue/id/1']");
		$this->assertXpath("//a[@href='apmgr.com/applicant/dashboard/viewfeesdue/id/2']");
		$this->assertQueryContentContains('a',"View Paid Fee's",$this->getResponse()->getBody());
	}

	public function testIndexActionDisplaysTitleAndIcons()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jvazquez','Test1234');
		$this->dispatch('applicant/dashboard/index');
		$this->assertQueryContentContains('h1',"Applicant Dashboard",$this->getResponse()->getBody());
	}
	public function testViewFeesDueAction()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/viewfeesdue');
		$this->assertQueryContentContains('h1',"View Fee's Due",$this->getResponse()->getBody());
	}

	public function testViewFeesDueActionShowFees()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->db->query("TRUNCATE TABLE applicantFeeBill");
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/viewfeesdue/id/1');
		# We need to delete the applicantFeeBills
		$this->assertQueryContentContains('h1',"View Fee's Due",$this->getResponse()->getBody());
		$this->assertQueryContentContains('p',"fee1",$this->getResponse()->getBody());
		$this->assertQueryContentContains('p',"fee2",$this->getResponse()->getBody());
	}

	public function testViewFeesDueActionShowFeesButNoPayment()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->db->query("TRUNCATE TABLE applicantFeeBill");
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/viewfeesdue/id/1');
		# We need to delete the applicantFeeBills
		$this->assertQueryContentContains('h1',"View Fee's Due",$this->getResponse()->getBody());
		$this->assertQueryContentContains('p',"fee1",$this->getResponse()->getBody());
		$this->assertQueryContentContains('p',"fee2",$this->getResponse()->getBody());
	}

	public function testViewfeespaidAction()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/viewfeespaid/id/1');
		$this->assertQueryContentContains('h1',"View Paid Fee's",$this->getResponse()->getBody());
		$this->assertQueryContentContains('caption',"Your Paid Fee's",$this->getResponse()->getBody());
	}

	public function testPaymentAction()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/payment/id/1');
		$this->assertQueryCount('form', 1,$this->getResponse()->getBody());
		$this->assertXpath("//input[@id='x_receipt_link_url']");
		$this->assertXpath("//input[@value='http://apmgr.com/applicant/dashboard/paymentconfirmation']");
		$applicantFeeSetting = new Applicant_Model_FeeSetting();
		$result = $applicantFeeSetting->retrieveEnabledFees();
		$total = 0;
		foreach($result as $id=>$value) {
			$total +=(int)$value['amount'];
		}
		$this->assertXpath("//input[@value=".$total."]");
	}
	
	public function testPaymentActionDisplaysMissingUserIdMessage(){
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/payment/');
		$this->assertRedirect('We should had been redirected');
	}
	
	public function testPaymentDisabledAndPaymentRedirectsToIndex()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->db->query("UPDATE `settings` SET value=0 WHERE name='paymentSystem'");
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/payment/id/1');
		$this->db->query("UPDATE `settings` SET value=1 WHERE name='paymentSystem'");
		$response = $this->getResponse()->getBody();
		$response = strlen($response>0)?$response:'No html response';
		$this->logger->notify($this, "<html snip>");
		$this->logger->notify($this, $response);
		$this->logger->notify($this, "</html snip>");
		$redirectedTo = $this->getResponse()->getHeaders();
		$this->logger->notify($this, "Flow went to ".$redirectedTo[0]['value']);
		$this->assertEquals('apmgr.com/applicant/dashboard',$redirectedTo[0]['value']);
		$this->assertRedirect($this->getResponse()->getBody());
	}

	public function testPayRedirectsToAuthorize()
	{
		$this->markTestSkipped('Unable to perform post hit');
//		echo "Running ".__FUNCTION__.PHP_EOL;
//		$this->login('applicant','Test1234');
//		$this->request->setMethod('POST')->setPost(array());
//		$this->dispatch('applicant/dashboard/payment/id/1');
//		$redirectedTo = $this->getResponse()->getHeaders();
//		var_dump( $this->getResponse()->getBody() );
//		$this->logger->notify($this, "Flow went to ".$redirectedTo[0]['value']);
		//		$this->assertRedirect($this->getResponse()->getBody());
	}

	public function testPayConfirmationDisplaysMessage()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/paymentconfirmation');
		$this->assertQueryContentContains('p', 'The payment system is disabled',$this->getResponse()->getBody());
	}

	public function testPayConfirmationProcess()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->request->setMethod('POST')->setPost(unserialize('a:46:{s:6:"module";s:9:"applicant";s:10:"controller";s:9:"dashboard";s:6:"action";s:19:"paymentconfirmation";s:15:"x_response_code";s:1:"1";s:22:"x_response_reason_code";s:1:"1";s:22:"x_response_reason_text";s:35:"This transaction has been approved.";s:10:"x_avs_code";s:1:"Y";s:11:"x_auth_code";s:6:"mSY6Ee";s:10:"x_trans_id";s:10:"2153787672";s:8:"x_method";s:2:"CC";s:11:"x_card_type";s:4:"Visa";s:16:"x_account_number";s:8:"XXXX0027";s:12:"x_first_name";s:4:"John";s:11:"x_last_name";s:4:"Test";s:9:"x_company";s:19:"The Foo Company LTD";s:9:"x_address";s:14:"Vergara 1945 3";s:6:"x_city";s:8:"Banfield";s:7:"x_state";s:2:"Tx";s:5:"x_zip";s:5:"70000";s:9:"x_country";s:9:"Argentina";s:7:"x_phone";s:9:"333558888";s:5:"x_fax";s:0:"";s:7:"x_email";s:27:"jorgeomar.vazquez@gmail.com";s:13:"x_invoice_num";s:14:"20100726213337";s:13:"x_description";s:15:"Application Fee";s:6:"x_type";s:12:"auth_capture";s:9:"x_cust_id";s:1:"1";s:20:"x_ship_to_first_name";s:4:"John";s:19:"x_ship_to_last_name";s:4:"Test";s:17:"x_ship_to_company";s:19:"The Foo Company LTD";s:17:"x_ship_to_address";s:14:"Vergara 1945 3";s:14:"x_ship_to_city";s:8:"Banfield";s:15:"x_ship_to_state";s:2:"Tx";s:13:"x_ship_to_zip";s:5:"70000";s:17:"x_ship_to_country";s:9:"Argentina";s:8:"x_amount";s:5:"80.00";s:5:"x_tax";s:4:"0.00";s:6:"x_duty";s:4:"0.00";s:9:"x_freight";s:4:"0.00";s:12:"x_tax_exempt";s:5:"FALSE";s:8:"x_po_num";s:0:"";s:10:"x_MD5_Hash";s:32:"CC740734E5B17E904DE669CB3D2BE903";s:16:"x_cvv2_resp_code";s:0:"";s:15:"x_cavv_response";s:1:"2";s:14:"x_test_request";s:5:"false";s:6:"submit";s:4:"Save";}'));
		$this->dispatch('applicant/dashboard/paymentconfirmation');
		$this->assertRedirect('The redirection did not happen when we receive a payment confirmation');
	}

	public function testDisplayWaitListDisplaysTitle()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('applicant','Test1234');
		$this->dispatch('applicant/dashboard/waitlist/id/1');
		$this->assertQueryContentContains('h2', 'Your Wait List','We did not fetch the title');
	}

	public function testDisplayWaitListDisplaysWaitListApplicationInformation()
	{
		echo "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jconnor','Test1234');
		$this->dispatch('applicant/dashboard/waitlist/id/1');
		$this->assertQueryContentContains('p','Ph fondo',$this->getResponse()->getBody());
	}
	
	/* (non-PHPdoc)
	 * @see tests/application/ControllerTestCase::__toString()
	 */
	public function __toString()
	{
		return "DashboardTest";
	}
}
?>
