<?php
/**
 * Test class for Applicant_UpdateController.
 * Generated by PHPUnit on 2010-10-19 at 20:49:03.
 */
class Applicant_UpdateControllerTest extends ControllerTestCase
{

	/* (non-PHPdoc)
	 * @see Framework/PHPUnit_Framework_TestCase::setUp()
	 */
	public function setUp() {
		parent::setUp();
		$this->dataSetStackBuffer = array('users'=>1,'applicantApply'=>0,'applicantStatus'=>1);
		$this->loadDataSets();
	}

	/* (non-PHPdoc)
	 * @see Framework/PHPUnit_Framework_TestCase::tearDown()
	 */
	public function tearDown() {
		$this->unLoadDataSets();
		parent::tearDown();
	}

	public function testUpdateapplicantstatusActionWillDisplayForm() {
		print "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jvazquez','Test1234');
		$this->dispatch('applicant/update/updateapplicantstatus/applicantId/1/persist/1');
		$this->assertQueryContentContains('a', 'Back to search results','We should see a back to search results');
		$this->assertXpathCountMax('/form',1,'We should have 1 form in the update');
		//    	print $this->getResponse()->getBody();
	}

	public function testUpdateApplicantStatusWithNoApplicantWillDisplayError() {
		print "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jvazquez','Test1234');
		$this->dispatch('applicant/update/updateapplicantstatus');
		$this->assertQueryContentContains('p', 'No record found');
	}

	public function testUpdateApplicantStatusWithFakeApplicantWillDisplayError() {
		print "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jvazquez','Test1234');
		$this->dispatch('applicant/update/updateapplicantstatus/applicantId/77');
		$this->assertQueryContentContains('p', 'No record found');
	}

	public function testUpdateApplicantStatusRedirects() {
		print "Running ".__FUNCTION__.PHP_EOL;
		$this->login('jvazquez','Test1234');
		$this->request->setMethod('POST')->setPost( array('applicantStatusId'=>2,'comment'=>'We changed the status') );
		$this->dispatch('applicant/update/updateapplicantstatus/applicantId/1/persist/1');
		$this->assertRedirect("After updating the status we should have redirected");
	}

	public function testBgcheckAction()
	{
	}

}
?>
